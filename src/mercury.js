/** * Mercury is a Solr wrapper for Angular * @version v0.0.1 - 2016-03-25 * @author Alberto Gutierrez <magutierrez@emergya.com> * @license MIT License, http://www.opensource.org/licenses/MIT */'use strict';angular.module('mercury', [])    .provider('Mercury', [        function () {            var defEndpoint = '';            function $get($http) {                function Mercury(endpoint) {                    this.search = function(options) {                        var url = endpoint + 'select';                        var defaults = {                            wt: 'json',                            'json.wrf': 'JSON_CALLBACK'                        };                        /* add to query facet for request all info for facets */                        if(angular.isArray(options['facet.field'])){                            for(var i = 0; i < options['facet.field'].length; i++){                                if(i == 0) url += "?";                                url += 'facet.field='+options['facet.field'][i]+"&";                            }                            delete options['facet.field'];                        }                        /* add to query facet to filtering */                        if(angular.isArray(options['fq'])){                            for(var e = 0; e < options['fq'].length; e++){                                //if(e == 0) url += "?";                                url += '&fq='+options['fq'][e]+"&";                            }                            delete options['fq'];                        }                        angular.extend(defaults, options);                        return $http.jsonp(url, {                            params: defaults                        });                    };                    this.withEndpoint = function (url) {                        return new Mercury(url);                    };                }                return new Mercury(defEndpoint);            }            function setEndpoint(url) {                defEndpoint = url;            }            return {                $get: [ '$http', $get ],                setEndpoint: setEndpoint            }        } ])    .directive('mercurySearch', [        function() {            return {                restrict: 'AE',                transclude: true,                replace: false,                template: '<div data-ng-transclude></div>',                /*TODO: change for dinamyc array!!!*/                scope: {                    q: '@query',                    start: '@',                    rows: '@',                    sort: '@',                    fl: '@fields',                    indexUrl: '@'                },                controller: [ '$scope', '$rootScope', 'Mercury',                    function ($scope, $rootScope, Mercury) {                        var searchServ = !$scope.indexUrl ? Mercury : Mercury.withEndpoint($scope.indexUrl);                        var options = {                            q: $scope.q || '*:*',                            start: $scope.start || 0,                            rows: $scope.rows || 10                        };                        if($scope.sort)                            options.sort = $scope.sort;                        if($scope.fl)                            options.fl = $scope.fl;                        searchServ.search(options).then(function (data) {                            var res = data.data.response;                            var transScope = $scope.$$nextSibling;                            transScope.solr = $rootScope.solr || {};                            transScope.solr.results = res.docs;                            transScope.solr.count = res.numFound;                        });                    } ]            };        }    ]);